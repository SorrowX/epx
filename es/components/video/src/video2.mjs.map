{"version":3,"file":"video2.mjs","sources":["../../../../../../packages/components/video/src/video.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <slot name=\"poster\">\n      <img\n        v-if=\"hasPoster\"\n        :class=\"ns.e('poster')\"\n        :src=\"poster\"\n        @load=\"onCoverLoad\"\n      />\n    </slot>\n    <slot name=\"duration\" v-bind=\"{ formatDuration }\">\n      <span v-if=\"hasDuration\" :class=\"ns.e('duration')\">\n        {{ formatDuration }}\n      </span>\n    </slot>\n    <video\n      ref=\"videoRef\"\n      controls\n      :class=\"ns.e('video')\"\n      :src=\"src\"\n      :hidden=\"hasPoster\"\n      @ended=\"handlePause\"\n      @pause=\"handlePause\"\n      @play=\"handlePlay\"\n    >\n      <slot />\n    </video>\n    <div v-if=\"hasPoster\" :class=\"ns.e('player-wrap')\" @click=\"handleClick\">\n      <slot name=\"player\" v-bind=\"{ handleClick }\">\n        <el-icon :class=\"ns.e('player')\" size=\"42\" color=\"rgba(0,0,0,0.6)\">\n          <VideoPlayer />\n        </el-icon>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport { ElIcon, useNamespace } from 'element-plus'\nimport { formatTime, isNumber } from '@element-plus/utils'\nimport * as IconsVue from '@element-plus/components/icons-vue/index'\nimport { videoEmits, videoProps } from './video'\n\ndefineOptions({\n  name: 'ElVideo',\n})\n\nconst { VideoPlayer } = IconsVue\nconst props = defineProps(videoProps)\nconst emit = defineEmits(videoEmits)\nconst ns = useNamespace('video')\n\nconst isPlayed = ref(false)\nconst paused = ref(true)\nconst videoRef = ref<HTMLVideoElement | null>(null)\n\nconst setPaused = (bool: boolean) => (paused.value = bool)\nconst setIsPlayed = (bool: boolean) => (isPlayed.value = bool)\n\nconst hasPoster = computed(() => !isPlayed.value && !!props.poster)\nconst hasDuration = computed(() => hasPoster.value && !!props.duration)\n\nconst formatDuration = computed(() =>\n  isNumber(props.duration) ? formatTime(props.duration) : props.duration\n)\n\nconst handlePlay = () => {\n  setPaused(false)\n}\n\nconst handlePause = () => {\n  setPaused(true)\n}\n\nconst handleClick = (e: MouseEvent) => {\n  setIsPlayed(true)\n  const video = videoRef.value\n\n  if (video) {\n    if (video.ended || video.paused) {\n      video.play()\n    } else {\n      video.pause()\n    }\n  }\n  emit('click', paused.value, e)\n}\n\ndefineExpose({\n  video: videoRef,\n})\n</script>\n"],"names":["IconsVue"],"mappings":";;;;;;;;mCA4Cc,CAAA;AAAA,EACZ,IAAM,EAAA,SAAA;AACR,CAAA,CAAA,CAAA;;;;;;AAEM,IAAA,MAAA,EAAE,aAAgB,GAAAA,KAAA,CAAA;AACxB,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AACd,IAAA,MAAM,IAAO,GAAA,MAAA,CAAA;AACP,IAAA,MAAA,EAAA,GAAK,aAAa,OAAO,CAAA,CAAA;AAEzB,IAAA,MAAA,QAAA,GAAW,IAAI,KAAK,CAAA,CAAA;AACpB,IAAA,MAAA,MAAA,GAAS,IAAI,IAAI,CAAA,CAAA;AACjB,IAAA,MAAA,QAAA,GAAW,IAA6B,IAAI,CAAA,CAAA;AAElD,IAAA,MAAM,SAAY,GAAA,CAAC,IAAmB,KAAA,MAAA,CAAO,KAAQ,GAAA,IAAA,CAAA;AACrD,IAAA,MAAM,WAAc,GAAA,CAAC,IAAmB,KAAA,QAAA,CAAS,KAAQ,GAAA,IAAA,CAAA;AAEnD,IAAA,MAAA,SAAA,GAAY,SAAS,MAAM,CAAC,SAAS,KAAS,IAAA,CAAC,CAAC,KAAA,CAAM,MAAM,CAAA,CAAA;AAC5D,IAAA,MAAA,WAAA,GAAc,SAAS,MAAM,SAAA,CAAU,SAAS,CAAC,CAAC,MAAM,QAAQ,CAAA,CAAA;AAEtE,IAAA,MAAM,cAAiB,GAAA,QAAA;AAAA,MAAS,MAC9B,SAAS,KAAM,CAAA,QAAQ,IAAI,UAAW,CAAA,KAAA,CAAM,QAAQ,CAAA,GAAI,KAAM,CAAA,QAAA;AAAA,KAChE,CAAA;AAEA,IAAA,MAAM,aAAa,MAAM;AACvB,MAAA,SAAA,CAAU,KAAK,CAAA,CAAA;AAAA,KACjB,CAAA;AAEA,IAAA,MAAM,cAAc,MAAM;AACxB,MAAA,SAAA,CAAU,IAAI,CAAA,CAAA;AAAA,KAChB,CAAA;AAEM,IAAA,MAAA,WAAA,GAAc,CAAC,CAAkB,KAAA;AACrC,MAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AAChB,MAAA,MAAM,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEvB,MAAA,IAAI,KAAO,EAAA;AACL,QAAA,IAAA,KAAA,CAAM,KAAS,IAAA,KAAA,CAAM,MAAQ,EAAA;AAC/B,UAAA,KAAA,CAAM,IAAK,EAAA,CAAA;AAAA,SACN,MAAA;AACL,UAAA,KAAA,CAAM,KAAM,EAAA,CAAA;AAAA,SACd;AAAA,OACF;AACK,MAAA,IAAA,CAAA,OAAA,EAAS,MAAO,CAAA,KAAA,EAAO,CAAC,CAAA,CAAA;AAAA,KAC/B,CAAA;AAEa,IAAA,QAAA,CAAA;AAAA,MACX,KAAO,EAAA,QAAA;AAAA,KACR,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
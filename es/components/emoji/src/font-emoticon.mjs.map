{"version":3,"file":"font-emoticon.mjs","sources":["../../../../../../packages/components/emoji/src/font-emoticon.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <span\n      v-for=\"(item, index) in peopleList\"\n      :key=\"index\"\n      :class=\"ns.e('native')\"\n      @click=\"handleClick(item)\"\n    >\n      {{ item.text }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from 'element-plus'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { emoticonEmits, emoticonProps } from './emoji'\nimport { COMMOM_TYPE, useFontEmoticon } from './helper'\nimport type { FontEmoticonListItem } from './helper'\n\ndefineOptions({\n  name: 'ElFontEmoticon',\n})\n\nconst props = defineProps(emoticonProps)\nconst emit = defineEmits(emoticonEmits)\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: string) => {\n    emit(UPDATE_MODEL_EVENT, val)\n  },\n})\n\nconst ns = useNamespace('font-emoticon')\n\nconst { peopleList } = useFontEmoticon()\n\nconst handleClick = (item: FontEmoticonListItem) => {\n  model.value = item['text'] ?? ''\n  emit(CHANGE_EVENT, item, COMMOM_TYPE)\n}\n</script>\n"],"names":[],"mappings":";;;;;;;mCAqBc,CAAA;AAAA,EACZ,IAAM,EAAA,gBAAA;AACR,CAAA,CAAA,CAAA;;;;;;AAEA,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AACd,IAAA,MAAM,IAAO,GAAA,MAAA,CAAA;AAEb,IAAA,MAAM,QAAQ,QAAS,CAAA;AAAA,MACrB,GAAA,EAAK,MAAM,KAAM,CAAA,UAAA;AAAA,MACjB,GAAA,EAAK,CAAC,GAAgB,KAAA;AACpB,QAAA,IAAA,CAAK,oBAAoB,GAAG,CAAA,CAAA;AAAA,OAC9B;AAAA,KACD,CAAA,CAAA;AAEK,IAAA,MAAA,EAAA,GAAK,aAAa,eAAe,CAAA,CAAA;AAEjC,IAAA,MAAA,EAAE,UAAW,EAAA,GAAI,eAAgB,EAAA,CAAA;AAEjC,IAAA,MAAA,WAAA,GAAc,CAAC,IAA+B,KAAA;;AAC5C,MAAA,KAAA,CAAA,KAAA,GAAA,CAAQ,EAAK,GAAA,IAAA,CAAA,MAAA,CAAA,KAAL,IAAgB,GAAA,EAAA,GAAA,EAAA,CAAA;AACzB,MAAA,IAAA,CAAA,YAAA,EAAc,MAAM,WAAW,CAAA,CAAA;AAAA,KACtC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}